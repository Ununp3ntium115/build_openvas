/**
 * SPDX-FileCopyrightText: 2025 AI-Enhanced OpenVAS Project
 * SPDX-License-Identifier: GPL-2.0-or-later
 * 
 * AI-Powered Vulnerability Analysis Plugin Header
 */

#ifndef AI_VULN_ANALYZER_H
#define AI_VULN_ANALYZER_H

#include <glib.h>
#include <json-glib/json-glib.h>

/**
 * @brief AI analysis result structure
 */
typedef struct {
    gchar *risk_assessment;
    gchar *business_impact;
    gchar *remediation_priority;
    gchar *detailed_remediation;
    gchar *exploit_likelihood;
    JsonArray *related_threats;
    gdouble confidence_score;
} ai_analysis_result_t;

/**
 * @brief Enhanced vulnerability analysis structure
 */
typedef struct {
    gchar *nvt_oid;
    gchar *vulnerability_name;
    gchar *description;
    gchar *severity;
    gchar *cvss_score;
    gchar *cve_ids;
    gchar *affected_software;
    gchar *host_info;
    JsonObject *scan_results;
} vuln_context_t;

/* Plugin lifecycle functions */
gboolean ai_vuln_analyzer_init(void);
void ai_vuln_analyzer_cleanup(void);

/* Core analysis functions */
ai_analysis_result_t *ai_analyze_vulnerability(const gchar *nvt_oid, JsonObject *scan_data);
gchar *ai_generate_vulnerability_report(ai_analysis_result_t *analysis, vuln_context_t *context);

/* Utility functions */
void free_analysis_result(ai_analysis_result_t *result);
void free_vuln_context(vuln_context_t *context);

#endif /* AI_VULN_ANALYZER_H */